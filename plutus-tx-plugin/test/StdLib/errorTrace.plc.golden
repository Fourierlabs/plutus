(program
  (let
    (nonrec)
    (datatypebind
      (datatype (tyvardecl Unit (type))  Unit_match (vardecl Unit Unit))
    )
    (termbind
      (strict)
      (vardecl error (all a (type) (fun (con unit) a)))
      (abs a (type) (lam thunk (con unit) (error a)))
    )
    (termbind
      (strict)
      (vardecl trace (all a (type) (fun (con string) (fun a a))))
      (builtin trace)
    )
    (termbind (strict) (vardecl unitval (con unit)) (con unit ()))
    [
      { error (con integer) }
      (let
        (nonrec)
        (termbind
          (strict)
          (vardecl wild Unit)
          [ [ { trace Unit } (con string "") ] Unit ]
        )
        unitval
      )
    ]
  )
)